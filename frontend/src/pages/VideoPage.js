// frontend/src/pages/VideoPage.js

import React, { useEffect, useState, useRef } from 'react';
import { useParams } from 'react-router-dom';
import ReactPlayer from 'react-player';
import axios from 'axios';
import Header from '../components/Header';
import VideoComments from '../components/VideoComments';
import './styles/VideoPage.css';

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∫–æ–Ω–∫–∏, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä, React Icons (–Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: npm install react-icons)
// import { FaThumbsUp as LikedIcon, FaRegThumbsUp as UnlikedIcon } from 'react-icons/fa'; // –ü—Ä–∏–º–µ—Ä –∏–∫–æ–Ω–æ–∫

const VideoPage = () => {
    const { id } = useParams();
    const [video, setVideo] = useState(null);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState('');
    const isLoggedIn = !!localStorage.getItem('access_token');

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ª–∞–π–∫–æ–≤
    const [likesCount, setLikesCount] = useState(0);
    const [isLiked, setIsLiked] = useState(false);

    // useRef –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, –±—ã–ª –ª–∏ —É–∂–µ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ—Å–º–æ—Ç—Ä –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –≤–∏–¥–µ–æ
    const hasIncrementedView = useRef(false);

    useEffect(() => {
        const fetchVideo = async () => {
            setLoading(true);
            setError('');
            try {
                // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ª–∞–π–∫–∞—Ö —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                const config = isLoggedIn ? {
                    headers: {
                        'Authorization': `Bearer ${localStorage.getItem('access_token')}`
                    }
                } : {};

                const response = await axios.get(`http://37.194.42.234:8000/api/videos/${id}/`, config);
                setVideo(response.data);
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –ª–∞–π–∫–æ–≤ –∏–∑ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
                setLikesCount(response.data.likes_count);
                setIsLiked(response.data.is_liked);

            } catch (err) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∏–¥–µ–æ:', err);
                let errorMessage = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ';
                if (err.response && err.response.status === 404) {
                    errorMessage = '–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ';
                    setVideo(null);
                }
                setError(errorMessage);
            } finally {
                setLoading(false);
            }
        };

        fetchVideo();

        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏, –µ—Å–ª–∏ ID –≤–∏–¥–µ–æ –º–µ–Ω—è–µ—Ç—Å—è (–¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –º–µ–∂–¥—É –≤–∏–¥–µ–æ)
        return () => {
            hasIncrementedView.current = false;
        };
    }, [id, isLoggedIn]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç ID –≤–∏–¥–µ–æ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤—Ö–æ–¥–∞ (–¥–ª—è is_liked)

    // –û—Ç–¥–µ–ª—å–Ω—ã–π useEffect –¥–ª—è –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    useEffect(() => {
        if (video && !error && !hasIncrementedView.current) {
            const incrementViewCount = async () => {
                try {
                    const incrementResponse = await axios.post(`http://37.194.42.234:8000/api/videos/${video.id}/increment_view/`);
                    console.log('–û—Ç–≤–µ—Ç –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞—Ü–∏–∏:', incrementResponse.data);
                    
                    setVideo(prevVideo => {
                        if (prevVideo) {
                            return { ...prevVideo, views_count: incrementResponse.data.views_count };
                        }
                        return prevVideo;
                    });
                    
                    hasIncrementedView.current = true;
                } catch (err) {
                    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞—Ü–∏–∏ —Å—á–µ—Ç—á–∏–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤:', err);
                }
            };
            incrementViewCount();
        }
    }, [video, error]);

    // --- –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª–∞–π–∫–æ–≤ ---
    const handleLikeToggle = async () => {
        if (!isLoggedIn) {
            alert('–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É.');
            return;
        }

        try {
            const token = localStorage.getItem('access_token');
            const config = {
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            };
            
            const response = await axios.post(`http://37.194.42.234:8000/api/videos/${video.id}/like_toggle/`, {}, config);
            
            console.log('–û—Ç–≤–µ—Ç –ª–∞–π–∫–∞:', response.data);
            setLikesCount(response.data.likes_count);
            setIsLiked(response.data.is_liked);
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ–±–æ–ª—å—à–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ª–∞–π–∫–µ/–¥–∏–∑–ª–∞–π–∫–µ
            // alert(response.data.message); 

        } catch (err) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –ª–∞–π–∫–∞:', err);
            // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ 401 (Unauthorized), —Å–æ–æ–±—â–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            if (err.response && err.response.status === 401) {
                alert('–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –≤—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.');
            } else {
                alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å/—Å–Ω—è—Ç—å –ª–∞–π–∫.');
            }
        }
    };
    // --- –ö–û–ù–ï–¶ –ù–û–í–û–ô –§–£–ù–ö–¶–ò–ò ---


    if (loading) return <div className="page-message">–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
    if (error && !video) return <div className="page-message">{error}</div>;
    if (!video && !loading) return <div className="page-message">–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>;

    return (
        <div>
            <Header />
            <div className="content-layout">

                <div className="video-and-info">
                    <div className="player-wrapper">
                        <ReactPlayer
                            className="react-player"
                            url={video.file_url}
                            controls
                            width="100%"
                            height="100%"
                            config={{
                                file: {
                                    attributes: {
                                        controlsList: 'nodownload'
                                    }
                                }
                            }}
                        />
                    </div>

                    <div className="video-info">
                        <h1>{video.title}</h1>
                        <p>–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {video.views_count !== undefined ? video.views_count : '–ó–∞–≥—Ä—É–∑–∫–∞...'}</p>
                        <p>{video.author_username} ‚Ä¢ {new Date(video.uploaded_at).toLocaleDateString()}</p>
                        <p className="video-description-text">{video.description}</p> {/* –î–æ–±–∞–≤–∏–ª –∫–ª–∞—Å—Å –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è */}

                        {/* --- –ù–û–í–ê–Ø –ö–ù–û–ü–ö–ê –õ–ê–ô–ö–ê --- */}
                        <div className="video-actions">
                            <button 
                                onClick={handleLikeToggle} 
                                className={`like-button ${isLiked ? 'liked' : ''}`}
                            >
                                {/* –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç, –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å React Icons: npm install react-icons */}
                                {isLiked ? '‚ù§Ô∏è –ù—Ä–∞–≤–∏—Ç—Å—è' : 'ü§ç –ù—Ä–∞–≤–∏—Ç—Å—è'} 
                                {/* –ü—Ä–∏–º–µ—Ä —Å –∏–∫–æ–Ω–∫–∞–º–∏: {isLiked ? <LikedIcon /> : <UnlikedIcon />} –ù—Ä–∞–≤–∏—Ç—Å—è */}
                            </button>
                            <span className="likes-count">
                                {likesCount} –õ–∞–π–∫–æ–≤
                            </span>
                        </div>
                        {/* --- –ö–û–ù–ï–¶ –ö–ù–û–ü–ö–ò –õ–ê–ô–ö–ê --- */}

                    </div>
                </div>

                <div className="comments-sidebar">
                    <VideoComments videoId={id} isLoggedIn={isLoggedIn} />
                </div>

            </div>
        </div>
    );
};

export default VideoPage;